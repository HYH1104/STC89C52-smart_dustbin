C51 COMPILER V9.57.0.0   MAIN                                                              04/25/2021 19:35:04 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\obj\main.obj
COMPILER INVOKED BY: D:\Keil uvision5\C51\BIN\C51.EXE ..\code\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\code;..\user) DE
                    -BUG OBJECTEXTEND PRINT(.\main.lst) TABS(2) OBJECT(..\obj\main.obj)

line level    source

   1          /******************************************************
   2          **  工程名称：UNV-01语音识别模块驱动程序
   3          **  CPU: STC11L08XE
   4          **  晶振：22.1184MHZ
   5          **  波特率：9600 bit/S
   6          **  配套产品信息：UNV-LD3320+STC11语音识别开发板
   7          **  修改日期：2018.5.13
   8          **  说明：口令模式： 即每次识别时都需要说“小鹰”这个口令 ，才能够进行下一级的识别
   9          ***************************/
  10          #include "config.h"
  11          /************************************************************************************/
  12          //  nAsrStatus 用来在main主程序中表示程序运行的状态，不是LD3320芯片内部的状态寄存器
  13          //  LD_ASR_NONE:    表示没有在作ASR识别
  14          //  LD_ASR_RUNING：   表示LD3320正在作ASR识别中
  15          //  LD_ASR_FOUNDOK:   表示一次识别流程结束后，有一个识别结果
  16          //  LD_ASR_FOUNDZERO: 表示一次识别流程结束后，没有识别结果
  17          //  LD_ASR_ERROR:   表示一次识别流程中LD3320芯片内部出现不正确的状态
  18          /***********************************************************************************/
  19          uint8 idata nAsrStatus=0; 
  20          void MCU_init(); 
  21          void ProcessInt0(); //识别处理函数
  22          void delay(unsigned long uldata);
  23          void User_handle(uint8 dat);//用户执行操作函数
  24          void Delay200ms();
  25          void Led_test(void);//单片机工作指示
  26          uint8_t G0_flag=DISABLE;//运行标志，ENABLE:运行。DISABLE:禁止运行 
  27          sbit LED=P4^2;//信号指示灯
  28          sbit P10=P1^0;
  29          sbit P11=P1^1;
  30          sbit P12=P1^2;
  31          sbit P13=P1^3;
  32          sbit P14=P1^4;
  33          
  34          /***********************************************************
  35          * 名    称： void  main(void)
  36          * 功    能： 主函数 程序入口
  37          * 入口参数：  
  38          * 出口参数：
  39          * 说    明：           
  40          * 调用方法： 
  41          **********************************************************/ 
  42          void  main(void)
  43          {
  44   1        uint8 idata nAsrRes;
  45   1        uint8 i=0;
  46   1        Led_test();
  47   1        MCU_init();
  48   1        LD_Reset();
  49   1        UartIni(); /*串口初始化*/
  50   1        nAsrStatus = LD_ASR_NONE;   //  初始状态：没有在作ASR
  51   1        
  52   1        #ifdef TEST 
  53   1        PrintCom("唤醒词:智能垃圾箱\r\n"); /*text.....*/
  54   1        PrintCom("      1、可回收垃圾\r\n"); /*text.....*/
C51 COMPILER V9.57.0.0   MAIN                                                              04/25/2021 19:35:04 PAGE 2   

  55   1        PrintCom("  2、干垃圾\r\n"); /*text.....*/
  56   1        PrintCom("  3、湿垃圾\r\n"); /*text.....*/
  57   1        PrintCom("  4、有害垃圾\r\n"); /*text.....*/
  58   1        PrintCom("      5、易拉罐\r\n"); /*text.....*/
  59   1        PrintCom("  6、报纸\r\n"); /*text.....*/
  60   1        PrintCom("  7、卫生纸\r\n"); /*text.....*/
  61   1        PrintCom("  8、毛巾\r\n"); /*text.....*/
  62   1        PrintCom("  9、贝剩菜剩饭\r\n"); /*text.....*/
  63   1        PrintCom("      10、过期食品\r\n"); /*text.....*/
  64   1        PrintCom("  11、电池\r\n"); /*text.....*/
  65   1        PrintCom("  12、杀虫剂\r\n"); /*text.....*/
  66   1        #endif
  67   1      P10=1;P11=1;P12=1;P13=1;P14=1;
  68   1        while(1)
  69   1        {  
  70   2          switch(nAsrStatus)
  71   2          {
  72   3            case LD_ASR_RUNING:
  73   3            case LD_ASR_ERROR:    
  74   3              break;
  75   3            case LD_ASR_NONE:
  76   3            {
  77   4              nAsrStatus=LD_ASR_RUNING;
  78   4              if (RunASR()==0)  /*  启动一次ASR识别流程：ASR初始化，ASR添加关键词语，启动ASR运算*/
  79   4              {
  80   5                nAsrStatus = LD_ASR_ERROR;
  81   5              }
  82   4              break;
  83   4            }
  84   3            case LD_ASR_FOUNDOK: /* 一次ASR识别流程结束，去取ASR识别结果*/
  85   3            {       
  86   4              nAsrRes = LD_GetResult();   /*获取结果*/
  87   4              User_handle(nAsrRes);//用户执行函数 
  88   4              nAsrStatus = LD_ASR_NONE;
  89   4              break;
  90   4            }
  91   3            case LD_ASR_FOUNDZERO:
  92   3            default:
  93   3            {
  94   4              nAsrStatus = LD_ASR_NONE;
  95   4              break;
  96   4            }
  97   3          }// switch        
  98   2        }// while
  99   1      
 100   1      }
 101          /***********************************************************
 102          * 名    称：   LED灯测试
 103          * 功    能： 单片机是否工作指示
 104          * 入口参数： 无 
 105          * 出口参数：无
 106          * 说    明：           
 107          **********************************************************/
 108          void Led_test(void)
 109          {
 110   1        LED=~ LED;
 111   1        Delay200ms();
 112   1        LED=~ LED;
 113   1        Delay200ms();
 114   1        LED=~ LED;
 115   1        Delay200ms();
 116   1        LED=~ LED;
C51 COMPILER V9.57.0.0   MAIN                                                              04/25/2021 19:35:04 PAGE 3   

 117   1      }
 118          /***********************************************************
 119          * 名    称： void MCU_init()
 120          * 功    能： 单片机初始化
 121          * 入口参数：  
 122          * 出口参数：
 123          * 说    明：           
 124          * 调用方法： 
 125          **********************************************************/ 
 126          void MCU_init()
 127          {
 128   1        P1M1=0;P1M0=0XFF;
 129   1        
 130   1        P0 = 0xff;
 131   1        P1 = 0;
 132   1        P2 = 0xff;
 133   1        P3 = 0xff;
 134   1        P4 = 0xff;
 135   1        
 136   1      
 137   1        LD_MODE = 0;    //  设置MD管脚为低，并行模式读写
 138   1        IE0=1;
 139   1        EX0=1;
 140   1        EA=1;
 141   1      }
 142          /***********************************************************
 143          * 名    称：  延时函数
 144          * 功    能：
 145          * 入口参数：  
 146          * 出口参数：
 147          * 说    明：           
 148          * 调用方法： 
 149          **********************************************************/ 
 150          void Delay200us()   //@22.1184MHz
 151          {
 152   1        unsigned char i, j;
 153   1        _nop_();
 154   1        _nop_();
 155   1        i = 5;
 156   1        j = 73;
 157   1        do
 158   1        {
 159   2          while (--j);
 160   2        } while (--i);
 161   1      }
 162          
 163          void  delay(unsigned long uldata)
 164          {
 165   1        unsigned int j  =  0;
 166   1        unsigned int g  =  0;
 167   1        while(uldata--)
 168   1        Delay200us();
 169   1      }
 170          void delay_ms(unsigned int ms)
 171          {                         
 172   1        unsigned int a;
 173   1        while(ms)
 174   1        {
 175   2          a=80;
 176   2          while(a--);
 177   2          ms--;
 178   2        }
C51 COMPILER V9.57.0.0   MAIN                                                              04/25/2021 19:35:04 PAGE 4   

 179   1        return;
 180   1      }
 181          void Delay200ms()   //@22.1184MHz
 182          {
 183   1        unsigned char i, j, k;
 184   1      
 185   1        i = 17;
 186   1        j = 208;
 187   1        k = 27;
 188   1        do
 189   1        {
 190   2          do
 191   2          {
 192   3            while (--k);
 193   3          } while (--j);
 194   2        } while (--i);
 195   1      }
 196          
 197          /***********************************************************
 198          * 名    称： 中断处理函数
 199          * 功    能：
 200          * 入口参数：  
 201          * 出口参数：
 202          * 说    明：           
 203          * 调用方法： 
 204          **********************************************************/ 
 205          void ExtInt0Handler(void) interrupt 0  
 206          {   
 207   1        ProcessInt0();        
 208   1      }
 209          /***********************************************************
 210          * 名    称：用户执行函数 
 211          * 功    能：识别成功后，执行动作可在此进行修改 
 212          * 入口参数： 无 
 213          * 出口参数：无
 214          * 说    明：           
 215          **********************************************************/
 216          void  User_handle(uint8 dat)
 217          {
 218   1           //UARTSendByte(dat);//串口识别码（十六进制）
 219   1           if(0==dat)
 220   1           {
 221   2            G0_flag=ENABLE;
 222   2            LED=0;
 223   2            PrintCom("收到\r\n"); /*text.....*/
 224   2            P14=0;delay_ms(1500);P14=1;
 225   2           }
 226   1           else if(ENABLE==G0_flag)
 227   1           {  
 228   2              G0_flag=DISABLE;
 229   2              LED=1;
 230   2             switch(dat)       /*对结果执行相关操作,客户可删除Printcom 串口输出语句替换为其他需要控制的代码*/
 231   2              {
 232   3                case CODE_KHSLJ:      
 233   3                  PrintCom("“可回收垃圾”命令识别成功\r\n"); /*text.....*/
 234   3                  P10=0;delay_ms(2000);P10=1;
 235   3                  break;
 236   3                case CODE_GLJ:  
 237   3                  PrintCom("“干垃圾”命令识别成功\r\n"); /*text.....*/
 238   3                  P11=0;delay_ms(2000);P11=1;
 239   3                  break;
 240   3                case CODE_SLJ:          
C51 COMPILER V9.57.0.0   MAIN                                                              04/25/2021 19:35:04 PAGE 5   

 241   3                  PrintCom("“湿垃圾”命令识别成功\r\n"); /*text.....*/
 242   3                  P12=0;delay_ms(2000);P12=1;
 243   3                  break;
 244   3                case CODE_YHLJ:                     
 245   3                  PrintCom("“有害垃圾”命令识别成功\r\n"); /*text.....*/
 246   3                  P13=0;delay_ms(2000);P13=1;
 247   3                  break;
 248   3                case CODE_1:            
 249   3                  PrintCom("“易拉罐”命令识别成功\r\n"); /*text.....*/
 250   3                  P10=0;delay_ms(2000);P10=1;
 251   3                  break;
 252   3                case CODE_2:            
 253   3                  PrintCom("“报纸”命令识别成功\r\n"); /*text.....*/
 254   3                  P10=0;delay_ms(2000);P10=1;
 255   3                  break;
 256   3                case CODE_3:          
 257   3                  PrintCom("“卫生纸”命令识别成功\r\n"); /*text.....*/
 258   3                  P11=0;delay_ms(2000);P11=1;
 259   3                  break;  
 260   3                case CODE_4:            
 261   3                  PrintCom("“毛巾”命令识别成功\r\n"); /*text.....*/
 262   3                  P11=0;delay_ms(2000);P11=1;
 263   3                  break;
 264   3                case CODE_5:            
 265   3                  PrintCom("“剩菜剩饭”命令识别成功\r\n"); /*text.....*/
 266   3                  P12=0;delay_ms(2000);P12=1;
 267   3                  break;
 268   3                case CODE_6:          
 269   3                  PrintCom("“过期食品”命令识别成功\r\n"); /*text.....*/
 270   3                  P12=0;delay_ms(2000);P12=1;
 271   3                  break;  
 272   3                case CODE_7:            
 273   3                  PrintCom("“电池”命令识别成功\r\n"); /*text.....*/
 274   3                  P13=0;delay_ms(2000);P13=1;
 275   3                  break;
 276   3                case CODE_8:            
 277   3                  PrintCom("“杀虫剂”命令识别成功\r\n"); /*text.....*/
 278   3                  P13=0;delay_ms(2000);P13=1;
 279   3                  break;          
 280   3                default:PrintCom("请重新识别发口令\r\n"); /*text.....*/break;
 281   3              } 
 282   2            } 
 283   1            else  
 284   1            {
 285   2              PrintCom("请说出唤醒词\r\n"); /*text.....*/ 
 286   2            }
 287   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    659    ----
   CONSTANT SIZE    =    543    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      10
   IDATA SIZE       =      1       1
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
